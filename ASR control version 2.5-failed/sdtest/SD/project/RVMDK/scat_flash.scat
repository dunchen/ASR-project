;******************** (C) COPYRIGHT 2007 STMicroelectronics ********************
;* File Name          : scat_flash.scat
;* Author             : MCD Application Team
;* Date First Issued  : 02/05/2007
;* Description        : This file provides an example of a scatterloading
;*                      descriptor file that defines one load region in Embedded
;*                      FLASH and four execution regions.
;*******************************************************************************
; History:
; 04/02/2007: V0.2 
; 02/05/2007: V0.1
;*******************************************************************************
; THE PRESENT SOFTWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
; WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME.
; AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT,
; INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE
; CONTENT OF SUCH SOFTWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING
; INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
;*******************************************************************************
 
;  Vector table starts at 0
;  The vector table entries are provided by stm32f10x_vector.c
;  Code starts at 0x08000100
;  Heap is positioned by ARM_LIB_HEAB (this is the heap managed by the ARM libraries)
;  Stack is positioned by ARM_LIB_STACK (this is the heap managed by the ARM libraries)

; Embedded FLASH (128KB)
FLASH_LOAD 0x08000000  0x00020000
{
  ; 59 exceptions (59 * 4bytes = 236 = 0xEC, aligned to next power of two = 0x100)
  VECTORS +0  0x100
  {
    ; First two entries provided by library
    * (:gdef:__vectab_stack_and_reset, +FIRST)
         
    ; Remaining entries provided by the user in stm32f10x_vector.c
    *(VECT_TABLE)
  }

  FLASH_EXE 0x08000100  FIXED
  { 
    * (+RO)
  }

  ; embedded SRAM 20kB
  DATA 0x20000000  0x00004C00
  {                     
    * (+RW, +ZI)
  }

  ; Amount of memory (in bytes) allocated for heap and stack 
  ; Tailor thoese values to your application needs
  
  ; Heap starts at 19KB and grows upwards
  ARM_LIB_HEAP 0x20004C00  EMPTY  0x200
  {
  }

  ; Stack starts at the end of the 20KB of SRAM
  ; And grows downwards for 512B
  ARM_LIB_STACK 0x20005000  EMPTY  -0x200
  {
  }
}

;******************* (C) COPYRIGHT 2007 STMicroelectronics *****END OF FILE*****

